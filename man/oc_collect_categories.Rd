% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ocado_funcs.R
\name{oc_collect_categories}
\alias{oc_collect_categories}
\alias{oc_collect_product_general}
\alias{oc_collect_product_extra}
\alias{oc_collect_product_reviews}
\alias{oc_collect_nutrition_table}
\title{Collect ocado data}
\usage{
oc_collect_categories(remDr = remDr, url = "https://www.ocado.com")

oc_collect_product_general(
  remDr = remDr,
  links_to_use,
  sleep_min = 0,
  sleep_max = 1,
  url = "https://www.ocado.com"
)

oc_collect_product_extra(
  remDr = remDr,
  links_to_use,
  sleep_min = 0,
  sleep_max = 1
)

oc_collect_product_reviews(
  remDr = remDr,
  links_to_use,
  sleep_min = 0,
  sleep_max = 1
)

oc_collect_nutrition_table(
  remDr = remDr,
  links_to_use,
  sleep_min = 0,
  sleep_max = 1
)
}
\arguments{
\item{remDr}{Remote client driver}

\item{url}{ocado url}

\item{links_to_use}{Product Links}

\item{sleep_min}{Minimum time to suspend executing R expressions}

\item{sleep_max}{Maximum time to suspend executing R expressions}
}
\value{
\code{*_categories}: Tibble with category links

\code{*_product_general}: Tibble with general product data

\code{*_product_extra}: Tibble with extra product data

\code{*_product_reviews}: Tibble with product reviews

\code{*_nutrition_table}: List with products' nutrition tables
}
\description{
The 5 \code{oc_collect_*} functions scrape the \emph{ocado} website
and return the data indicated by each function name.
}
\section{Note}{

In order to play nice with the website, the scraper functions have
a built in 'sleep functionality'. This means that the functions will
suspend execution (i.e., go to sleep) for a random time interval, usually
less than 11 seconds whenever the sleep function, \emph{nytnyt}, is called.

These functions are verbose, allowing the user to get a sense of progress.
}

\examples{
\dontrun{
# Initiate server
remDr <- RSelenium::rsDriver(port = netstat::free_port(),
browser = "firefox", verbose = FALSE)$client

# Collect category links
oc_category <- oc_collect_categories(remDr = remDr)

# Collect product data from 1 category
chosen_category_links <- 7
oc_product_general <- oc_collect_product_general(
oc_category$link[chosen_category_links])

# Collect extra product data for 3 products
set.seed(132)
random_product_links <- sample(1:length(oc_product_general$product_link),
3, replace = FALSE)
oc_product_extra <- oc_collect_product_extra(
oc_product_general$product_link[random_product_links[1:3]])

# Collect product reviews, if available, for the same 3 products
oc_product_review <- oc_collect_product_reviews(
oc_product_general$product_link[random_product_links[1:3]])

# Collect product nutrition table, if available, for the same 3 products
oc_nutrition_table <- oc_collect_nutrition_table(
oc_product_general$product_link[random_product_links[1:3]])

# Close the server
remDr$close()
gc(remDr)
rm(remDr)
}
}
\seealso{
\code{\link{eg_collect_location_links}} for elgrocer data collection.
\code{\link{nytnyt}} for sleep functionality.
}
